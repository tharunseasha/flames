//HTML
<!DOCTYPE html>
  <head>
    <title>content</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" /> 
    <link rel="stylesheet" href="flame.css" />
  </head>
  <body>
    <div><h1>FLAMES</h1></div>
    <br />
    <div><header>FRIEND,LOVE,AFFECTION,MARRIAGE,ENEMY,SISTER</header></div>
    <br />
    <br />
    <div class="inname">YOUR NAME</div>
    <div>
      <input type="text" class="txt yname" placeholder="yourname" />
    </div>
    <br />
    <div class="inname">YOUR CRUSH NAME</div>
    <div>
      <input type="text" class="txt cname" placeholder="your crush name" />
    </div>
    <br />
    <br />
    <div><input type="submit" class="submit" value="SUBMIT" /></div>
    <div><input type="button" class ="again" value="Again"/></div>
    <p class="relation"></p>
    <script src="flames.js"></script>
  </body>
</html>
<----------------------------------------------------------------------------------------------------------------------------->
//CSS
* {
  margin: 0;
  padding: 0;
  box-sizing:inherit;
}
.hidden{
  display:none;
}

body {
  background-image: url(lovebg.jpg);
  background-repeat: no-repeat;
  font-family: cursive;
  height: 100%;
  background-size: cover;
}

h1 {
  text-align: center;
  color: rgb(9, 10, 10);
  font-size: 45px;
}
#words {
  text-align: center;
  color: darkmagenta;
  font-size: 30px;
}

.inname {
  font-size: 28px;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 2px;
  font-weight: 100;
  margin-top: 20px;
  margin-bottom: 10px;
  cursor: pointer;
  position: relative;
}
.txt {
  position: absolute;
  width: 300px;
  left: 50%;
  transform: translateX(-50%);
  color: #555;
  background-color: azure;
  border: none;
  font-family: cursive;
  font-size: 20px;
  text-transform: uppercase;
  cursor: pointer;
  font-weight: 300;
}

.submit {
  position: absolute;
  width: 100px;
  left: 40%;
  height: 35px;
  border-radius: 25px;
  font-family: cursive;
  font-size: large;
  font-style: inherit;
  color: rgb(27, 23, 23);
  background-color: rgb(247, 227, 165);
  border: 2;
}
.again{
  position: absolute;
  width: 100px;
  height: 35px;
  left: 53.5%;
  border-radius: 25px;
  font-family: cursive;
  font-size: large;
  font-style: inherit;
  color: rgb(27, 23, 23);
  background-color: rgb(247, 227, 165);
  border: 2;
}

header {
  text-align: center;
  font-size: 21px;
  font-weight: bolder;
}

input,
select,
textarea {
  color: deeppink;
  border-radius: 25px;
}
p {
  text-align: center;
  padding: 95px;
  text-decoration: maroon;
  font-weight: bolder;
  font-size: 25px;
}
.relation {
  text-align: center;
  padding: 95px;
  text-decoration: rgb(201, 29, 29);
  font-weight: bolder;
  font-size: 25px;
  top: 52px;
}
<------------------------------------------------------------------------------------------------------------------------------------------>
//JAVASCRIPT

"use strict";

function process(){
  
  let str1 = document.querySelector(".yname").value;
  let str2 = document.querySelector(".cname").value;
  str1 = str1.replace(" ", "");
  str2 = str2.replace(" ", "");
  let ar_str1 = [];
  let ar_str2 = [];
  for (let k = 0; k < str1.length; k++) {
    ar_str1.push(str1[k]);
  }
  for (let l = 0; l < str2.length; l++) {
    ar_str2.push(str2[l]);
  }

  for (let i = 0; i < ar_str1.length; i++) {
    for (let j = 0; j < ar_str2.length; j++) {
      if (ar_str1[i] === ar_str2[j]) {
        ar_str1[i] = "";
        ar_str2[j] = "";
      }
    }
  }
  let tot_str = ar_str1.concat(ar_str2).join("");
  console.log(tot_str, tot_str.length);

  const len_fstr = tot_str.length;
  console.log(len_fstr, typeof len_fstr);

  if (len_fstr > 0) {
    let fl_list = [
      "FRIEND",
      "LOVE",
      "AFFECTION",
      "MARRIAGE",
      "ENEMY",
      "SISTER",
    ];
    while (fl_list.length > 1) {
      let count = (len_fstr % fl_list.length) - 1;
      if (count >= 0) {
        let l_index = fl_list.slice(0, count);
        let r_index = fl_list.slice(count + 1);
        fl_list = r_index.concat(l_index);
      } else {
        fl_list = fl_list.slice(fl_list.length - 1);
      }
    }
    let relationship = fl_list[0];
    document.querySelector(".relation").classList.remove("hidden");
    document.querySelector(
      ".relation"
    ).textContent = `${str1.toUpperCase()}'s Relation ship with ${str2.toUpperCase()} is ${relationship}`;
  }
}
document.querySelector(".again").addEventListener("click",function(){
  document.querySelector(".yname").value = " ";
  document.querySelector(".cname").value = " ";
  document.querySelector(".relation").classList.add("hidden");
})

document.querySelector(".submit").addEventListener("click", process);
